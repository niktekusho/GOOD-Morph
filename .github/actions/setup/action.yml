name: "Setup `Node.js` and `pnpm`"
description: "Reusable composite action that installs Node and pnpm, configures caches and installs depedencies."
# inputs:
#   who-to-greet: # id of input
#     description: "Who to greet"
#     required: true
#     default: "World"
# outputs:
#   random-number:
#     description: "Random number"
#     value: ${{ steps.random-number-generator.outputs.random-number }}
runs:
  using: "composite"
  steps:
    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20

    - name: Install pnpm
      uses: pnpm/action-setup@v3
      with:
        version: 8
        run_install: false

    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

    - name: Setup pnpm cache
      uses:
        actions/cache@v4
        # Solves the warning on the path (inside with)
      env:
        STORE_PATH: ${{ env.STORE_PATH }}
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Setup Next.js cache
      uses: actions/cache@v4
      with:
        # See here for caching with `yarn` https://github.com/actions/cache/blob/main/examples.md#node---yarn or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
        path: |
          ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
        key:
          ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
        restore-keys: |
          ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-

    - name: Install dependencies
      shell: bash
      run: pnpm install
